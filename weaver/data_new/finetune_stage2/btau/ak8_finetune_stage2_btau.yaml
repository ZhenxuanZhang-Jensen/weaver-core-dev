### use `&`, `|`, `~` for logical operations on numpy arrays
### can use functions from `math`, `np` (numpy), and `ak` in the expression

##!! for b-tau sample, we also need it for inference, therefore requiring event_no%7!=0 for training 
selection: >-
    (jet_tightId==1) & (jet_no<2) & (fj_pt>200) & (fj_pt<2500) & (fj_sdmass>=20) & (fj_sdmass<260) &
    (
      ((fj_label >= 309) & (fj_label < 314) & (sample_isQCD==1) & (event_no%7!=0)) |
      ((fj_label < 309) & (fj_label < 314) & (sample_isQCD==0)) | 
      ((fj_label >= 314) & (sample_isQCD==0) & (event_no%7!=0))
    )
### selection to apply at test time (i.e., when running w/ --predict)
# starting from v8: we have dedicated QCD and ttbar dataset for test only - they compose of 1/7 full events.
# for QCD: just use 1/2 of events
##!! for QCD: the training set is used hence setting event_no%14==0
##!! for b-tau sample, use event_no%7==0 for inference 
test_time_selection: >-
    (jet_tightId==1) & (jet_no<2) &
    (
      ((sample_isQCD==1) & (event_no%14==0)) |
      ((fj_label < 309) & (fj_label < 314) & (sample_isQCD==0)) | 
      ((fj_label >= 314) & (sample_isQCD==0) & (event_no%7==0))
    )
new_variables:
    ### [format] name: formula
    ### can use functions from `math`, `np` (numpy), and `ak` in the expression
    # classes for reweighting (only used in the first attempt)
    label_H_bb: (fj_label == 17)
    label_H_cc: (fj_label == 18)
    label_H_ss: (fj_label == 19)
    label_H_qq: (fj_label == 20)
    label_H_bc: (fj_label == 21)
    label_H_bs: (fj_label == 22)
    label_H_cs: (fj_label == 23)
    label_H_gg: (fj_label == 24)
    label_H_ee: (fj_label == 25)
    label_H_mm: (fj_label == 26)
    label_H_tauhtaue: (fj_label == 27)
    label_H_tauhtaum: (fj_label == 28)
    label_H_tauhtauh: (fj_label == 29)
    label_QCD: (fj_label >= 309) & (fj_label < 314)
    label_Cust_btaue: (fj_label == 314)
    label_Cust_btaum: (fj_label == 315)
    label_Cust_btauh: (fj_label == 316)
    # modified label
    fj_label_mod: ak.where((fj_label >= 17) & (fj_label < 30), fj_label - 17, ak.where(fj_label >= 309, fj_label - 296, -1))

preprocess:
    ### method: [manual, auto] - whether to use manually specified parameters for variable standardization
    method: manual
    ### data_fraction: fraction of events to use when calculating the mean/scale for the standardization
    data_fraction:

inputs:
    ft_vars:
        length: 256
        pad_mode: constant
        vars:
            - [jet_custom_discs, null]

labels:
    ### type can be `simple`, `custom`, 'hybrid'
    type: simple
    value: null
    value_cls_index: fj_label_mod  # just input the label index
    value_cls_names: [
        label_H_bb, label_H_cc, label_H_ss, label_H_qq, label_H_bc, label_H_bs, label_H_cs, label_H_gg, label_H_ee, label_H_mm, label_H_tauhtaue, label_H_tauhtaum, label_H_tauhtauh,
        label_QCD_bb, label_QCD_cc, label_QCD_b, label_QCD_c, label_QCD_others,
        label_Cust_btaue, label_Cust_btaum, label_Cust_btauh
        ]

observers:
    - event_no
    - fj_label
    - fj_pt
    - fj_eta
    - fj_phi
    - fj_mass
    - fj_sdmass
    - fj_sdmass_fromsubjets
    - fj_gen_mass
    - fj_genparts_mass
    - fj_genjet_sdmass
    - fj_genjet_nomu_sdmass
    - sample_isQCD

weights:
    ### [option 1] use precomputed weights stored in the input files
    # use_precomputed_weights: true
    # weight_branches: [weight, class_weight]
    ### [option 2] compute weights on-the-fly using reweighting histograms
    use_precomputed_weights: false
    reweight_method: flat
    reweight_vars:
        fj_pt: [200, 251, 316, 398, 501, 630, 793, 997, 1255, 1579, 1987, 2500]
        fj_sdmass: [20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260]
    reweight_classes:
        [
          label_H_bb, label_H_cc, label_H_ss, label_H_qq, label_H_bc, label_H_bs, label_H_cs, label_H_gg, label_H_ee, label_H_mm, label_H_tauhtaue, label_H_tauhtaum, label_H_tauhtauh, 
          label_QCD, 
          label_Cust_btaue, label_Cust_btaum, label_Cust_btauh,
        ]
    class_weights:
      [
        0.16, 0.16, 0.16, 0.16, 0.16, 0.16, 0.16, 0.16, 0.08, 0.08, 0.08, 0.08, 0.2,
        1, 
        0.04, 0.04, 0.1,
      ]
    reweight_hists:
