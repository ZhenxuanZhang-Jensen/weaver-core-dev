### use `&`, `|`, `~` for logical operations on numpy arrays
### can use functions from `math`, `np` (numpy), and `ak` in the expression

selection: >-
    (jet_sdmass >= 150) & (jet_sdmass < 230) & ((event_class <= 18) | (event_class == 19)) & (((event_class <= 18) & (event_no % 1 == 0)) | (event_class > 18))

### selection to apply at test time (i.e., when running w/ --predict)
test_time_selection: >-
    (jet_sdmass >= 150) & (jet_sdmass < 230) & ((event_class <= 18) | (event_class == 19))

new_variables:
    ### [format] name: formula
    ### can use functions from `math`, `np` (numpy), and `ak` in the expression
    # training categories
    label_sr: (jet_sdmass >= 170) & (jet_sdmass < 210)
    label_sb: ((jet_sdmass >= 150) & (jet_sdmass < 170)) | ((jet_sdmass >= 210) & (jet_sdmass < 230))

preprocess:
    ### method: [manual, auto] - whether to use manually specified parameters for variable standardization
    method: manual
    ### data_fraction: fraction of events to use when calculating the mean/scale for the standardization
    data_fraction:

inputs:
    ft_vars:
        length: 128
        pad_mode: constant
        vars:
            - [jet_hidneurons, null]

labels:
    ### type can be `simple`, `custom`, 'hybrid'
    type: simple
    value: [label_sr, label_sb]


observers:
    - event_no
    - event_class
    - jet_sdmass
